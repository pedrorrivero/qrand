[tool.black]
line-length = 79
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.commitizen]
name = "cz_conventional_commits"
bump_message = "bump: version $current_version â†’ $new_version"
version_format = "$version"
version = "0.3.0a6"
version_files = [
    "qrand/__init__.py:__version__",
    "tests/test_qrand.py:__version__",
    "pyproject.toml:version",
    "QRAND.bib:version"
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 79

[tool.poetry]
name = "qrand"
version = "0.3.0a6"
description = "A multiprotocol and multiplatform quantum random number generation framework"
readme = "README.md"
homepage = "https://github.com/pedrorrivero/qrand"
authors = ["Pedro Rivero <pedro.rivero.ramirez@gmail.com>"]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.19.4"
randomgen = "^1.19.3"
qiskit-aer = { version = "^0.8.2", optional = true }
qiskit-ibmq-provider = { version = "0.12.3", optional = true }
qiskit-terra = { version = "^0.17.2", optional = true }
cirq = { version = "^0.10.0", optional = true }
qsharp = { version = "^0.15.2103", optional = true }

[tool.poetry.extras]
qiskit = ["qiskit-aer", "qiskit-ibmq-provider", "qiskit-terra"]
cirq = ["cirq"]
qsharp = ["qsharp"]

[tool.poetry.dev-dependencies]
pre-commit = "^2.7.1"
commitizen = "^2.17.7"
pytest = "^6.1.1"
pytest-cov = "^2.10.1"
black = "^20.8b1"
isort = "^5.6.4"
mypy = "^0.790"
data-science-types = "^0.2.20"
qiskit-aer = { version = "^0.8.2" }
qiskit-ibmq-provider = { version = "0.12.3" }
qiskit-terra = { version = "^0.17.2" }
cirq = { version = "^0.10.0" }
qsharp = { version = "^0.15.2103" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
