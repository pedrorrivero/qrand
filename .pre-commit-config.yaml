default_stages: [commit, manual]
repos:

# pre-commit
- repo: local
  hooks:
  - id: isort
    name: isort
    description: "Sort python imports"
    stages: [commit]
    entry: isort
    require_serial: true
    language: python
    types: [python]
    args: ['--filter-files']
  - id: mypy
    name: mypy
    description: "Static type checker"
    stages: [commit]
    entry: mypy
    language: python
    types: [python]
    args: [
      "--scripts-are-modules",
      "--ignore-missing-imports",
      "--warn-unused-ignores",
      "--warn-redundant-casts",
      "--warn-return-any",
      "--warn-unreachable",
    ]
    require_serial: true
    additional_dependencies: []
  - id: black
    name: black
    description: "Python code formatter"
    stages: [commit]
    entry: black
    language: python
    language_version: python3
    require_serial: true
    types: [python]
  - id: flake8
    name: flake8
    description: "PyFlakes lint + PyCodeStyle + McCabe cyclomatic complexity"
    stages: [commit]
    entry: flake8
    language: python
    types: [python]
    require_serial: true
  - id: pytest
    name: pytest
    description: "Run tests and produce coverage report"
    stages: [commit]
    language: system
    entry: pytest --cov=qrand --cov-report html tests #--cov-fail-under=100
    types: [python]
    pass_filenames: false

# commit-msg
- repo: local
  hooks:
  - id: gitlint
    name: gitlint
    description: "Enforce conventional commits and extra commiting rules"
    stages: [commit-msg]
    language: python
    entry: gitlint
    args: [--staged, --msg-filename]
  - id: commitizen
    name: commitizen check
    description: "Check whether the commit message follows commiting rules"
    stages: [commit-msg]
    entry: cz check --commit-msg-file
    language: python
    language_version: python3
    require_serial: true
    minimum_pre_commit_version: "0.15.4"
